name: Monte Carlo Simulation CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt



    - name: Check for .dvc directory
      id: checkdvc
      run: |
        if [ -d .dvc ]; then
          echo "::set-output name=exists::true"
        else
          echo "::set-output name=exists::false"
        fi

    - name: Initialize DVC
      if: steps.checkdvc.outputs.exists == 'false'
      run: dvc init --no-scm  # we're using --no-scm because the CI environment doesn't need to interact with git for DVC






    # - name: Remove existing .dvc folder
    #   run: |
    #     rm -rf .dvc

    # - name: Initialize DVC
    #   run: |
    #     dvc init







    - name: Run Tests
      run: |
        python -m unittest test_monte_carlo_simulation.py

    - name: Run Simulation
      run: python monte_carlo_simulation.py

    - name: Check for pi_estimate.txt
      run: |
        if [[ ! -f pi_estimate.txt ]]; then
          echo "pi_estimate.txt not found!"
          exit 1
        fi

    # - name: Delete .dvcignore
    #   run: |
    #     rm -f .dvcignore

    # - name: Reproduce DVC pipeline
    #   run: |
    #     dvc repro

    - name: Show DVC Version
      run: |
        dvc --version

    # - name: DVC Pull (Optional if you have remote setup)
    #   run: |
    #     dvc pull
    #   continue-on-error: true

    # - name: Display DVC Pipeline
    #   run: |
    #     dvc dag

    # - name: Check DVC Status
    #   run: |
    #     dvc status

    # - name: List DVC-tracked files
    #   run: |
    #     dvc list .

    # If you feel confident about the bug being fixed or want to showcase the error:
    #- name: Reproduce DVC pipeline
    #  run: |
    #    dvc repro

    - name: Explain DVC (Dummy Step)
      run: |
        echo "This workflow demonstrates the initialization and tracking capabilities of DVC. Even though the 'dvc repro' step might have issues, the above steps show the setup and basic commands to understand and visualize the DVC structure and changes."

